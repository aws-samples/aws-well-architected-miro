Resources:
  WorkflowsListFunctionServiceRoleE28887A4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: WatExporterStack/WorkflowsListFunction/ServiceRole/Resource
  WorkflowsListFunctionServiceRoleDefaultPolicy36E1E73A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: wellarchitected:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: WorkflowsListFunctionServiceRoleDefaultPolicy36E1E73A
      Roles:
        - Ref: WorkflowsListFunctionServiceRoleE28887A4
    Metadata:
      aws:cdk:path: WatExporterStack/WorkflowsListFunction/ServiceRole/DefaultPolicy/Resource
  WorkflowsListFunction8F8D5F81:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 70655e00aea08ef1b7ec4f7b5cb6e3fa47168d0c6272a1e3f02d9145bc29416a.zip
      Role:
        Fn::GetAtt:
          - WorkflowsListFunctionServiceRoleE28887A4
          - Arn
      FunctionName: WorkflowsListFunction
      Handler: index.handler
      Runtime: nodejs16.x
    DependsOn:
      - WorkflowsListFunctionServiceRoleDefaultPolicy36E1E73A
      - WorkflowsListFunctionServiceRoleE28887A4
    Metadata:
      aws:cdk:path: WatExporterStack/WorkflowsListFunction/Resource
      aws:asset:path: asset.70655e00aea08ef1b7ec4f7b5cb6e3fa47168d0c6272a1e3f02d9145bc29416a
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WorkflowFunctionServiceRole7444ED13:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: WatExporterStack/WorkflowFunction/ServiceRole/Resource
  WorkflowFunctionServiceRoleDefaultPolicy3260C7E7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: wellarchitected:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: WorkflowFunctionServiceRoleDefaultPolicy3260C7E7
      Roles:
        - Ref: WorkflowFunctionServiceRole7444ED13
    Metadata:
      aws:cdk:path: WatExporterStack/WorkflowFunction/ServiceRole/DefaultPolicy/Resource
  WorkflowFunction9B932173:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7fbb1f734885405ddc23afc5df4829f5eb2579b28c166748841575b0e26f7491.zip
      Role:
        Fn::GetAtt:
          - WorkflowFunctionServiceRole7444ED13
          - Arn
      FunctionName: WorkflowFunction
      Handler: index.handler
      Runtime: nodejs16.x
    DependsOn:
      - WorkflowFunctionServiceRoleDefaultPolicy3260C7E7
      - WorkflowFunctionServiceRole7444ED13
    Metadata:
      aws:cdk:path: WatExporterStack/WorkflowFunction/Resource
      aws:asset:path: asset.7fbb1f734885405ddc23afc5df4829f5eb2579b28c166748841575b0e26f7491
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UserOnboardFunctionServiceRoleD31BF065:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: WatExporterStack/UserOnboardFunction/ServiceRole/Resource
  UserOnboardFunctionServiceRoleDefaultPolicyE15224AB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ssm:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: UserOnboardFunctionServiceRoleDefaultPolicyE15224AB
      Roles:
        - Ref: UserOnboardFunctionServiceRoleD31BF065
    Metadata:
      aws:cdk:path: WatExporterStack/UserOnboardFunction/ServiceRole/DefaultPolicy/Resource
  UserOnboardFunctionB26A5A1A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 0caade30913b2eb697326651fb8932ab245cd590cb6a2b335e3dd084375294aa.zip
      Role:
        Fn::GetAtt:
          - UserOnboardFunctionServiceRoleD31BF065
          - Arn
      FunctionName: UserOnboardFunction
      Handler: index.handler
      Runtime: nodejs16.x
    DependsOn:
      - UserOnboardFunctionServiceRoleDefaultPolicyE15224AB
      - UserOnboardFunctionServiceRoleD31BF065
    Metadata:
      aws:cdk:path: WatExporterStack/UserOnboardFunction/Resource
      aws:asset:path: asset.0caade30913b2eb697326651fb8932ab245cd590cb6a2b335e3dd084375294aa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  APIGWauthFunctionServiceRole7D6C52E8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: WatExporterStack/APIGWauthFunction/ServiceRole/Resource
  APIGWauthFunctionServiceRoleDefaultPolicy8CC0094C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ssm:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: APIGWauthFunctionServiceRoleDefaultPolicy8CC0094C
      Roles:
        - Ref: APIGWauthFunctionServiceRole7D6C52E8
    Metadata:
      aws:cdk:path: WatExporterStack/APIGWauthFunction/ServiceRole/DefaultPolicy/Resource
  APIGWauthFunction6E814D2D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f3e7e98f8eb73b108743a30e91d69683dcb2bf71508a5255410a25bdc62ca6ee.zip
      Role:
        Fn::GetAtt:
          - APIGWauthFunctionServiceRole7D6C52E8
          - Arn
      FunctionName: APIGWauthFunction
      Handler: index.handler
      Runtime: nodejs16.x
    DependsOn:
      - APIGWauthFunctionServiceRoleDefaultPolicy8CC0094C
      - APIGWauthFunctionServiceRole7D6C52E8
    Metadata:
      aws:cdk:path: WatExporterStack/APIGWauthFunction/Resource
      aws:asset:path: asset.f3e7e98f8eb73b108743a30e91d69683dcb2bf71508a5255410a25bdc62ca6ee
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ApiGateway11E7F47B:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: BackendGateway
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Resource
  ApiGatewayDeploymentA26796E8fe51c3946418e2e8ba6db97ba493d93b:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ApiGateway11E7F47B
      Description: Automatically created by the RestApi construct
    DependsOn:
      - ApiGatewaygetwflistGETEDFAF82F
      - ApiGatewaygetwflist91F57F10
      - ApiGatewaygetwfworkloadIdGETBA2CE43B
      - ApiGatewaygetwfworkloadIdC0784AD3
      - ApiGatewaygetwf05308F73
      - ApiGatewayonboardPOST263FC2D8
      - ApiGatewayonboard4893A73B
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Deployment/Resource
  ApiGatewayDeploymentStageprod1C6D5CD6:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: ApiGateway11E7F47B
      DeploymentId:
        Ref: ApiGatewayDeploymentA26796E8fe51c3946418e2e8ba6db97ba493d93b
      StageName: prod
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/DeploymentStage.prod/Resource
  ApiGatewaygetwflist91F57F10:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ApiGateway11E7F47B
          - RootResourceId
      PathPart: get_wf_list
      RestApiId:
        Ref: ApiGateway11E7F47B
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/get_wf_list/Resource
  ApiGatewaygetwflistGETApiPermissionWatExporterStackApiGateway9D9B60BDGETgetwflist148A6947:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorkflowsListFunction8F8D5F81
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ApiGateway11E7F47B
            - /
            - Ref: ApiGatewayDeploymentStageprod1C6D5CD6
            - /GET/get_wf_list
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/get_wf_list/GET/ApiPermission.WatExporterStackApiGateway9D9B60BD.GET..get_wf_list
  ApiGatewaygetwflistGETApiPermissionTestWatExporterStackApiGateway9D9B60BDGETgetwflist17A811E6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorkflowsListFunction8F8D5F81
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ApiGateway11E7F47B
            - /test-invoke-stage/GET/get_wf_list
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/get_wf_list/GET/ApiPermission.Test.WatExporterStackApiGateway9D9B60BD.GET..get_wf_list
  ApiGatewaygetwflistGETEDFAF82F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: ApiGatewaygetwflist91F57F10
      RestApiId:
        Ref: ApiGateway11E7F47B
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorkflowsListFunction8F8D5F81
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/get_wf_list/GET/Resource
  ApiGatewaygetwf05308F73:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ApiGateway11E7F47B
          - RootResourceId
      PathPart: get_wf
      RestApiId:
        Ref: ApiGateway11E7F47B
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/get_wf/Resource
  ApiGatewaygetwfworkloadIdC0784AD3:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: ApiGatewaygetwf05308F73
      PathPart: "{workloadId}"
      RestApiId:
        Ref: ApiGateway11E7F47B
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/get_wf/{workloadId}/Resource
  ApiGatewaygetwfworkloadIdGETApiPermissionWatExporterStackApiGateway9D9B60BDGETgetwfworkloadId95110A74:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorkflowFunction9B932173
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ApiGateway11E7F47B
            - /
            - Ref: ApiGatewayDeploymentStageprod1C6D5CD6
            - /GET/get_wf/*
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/get_wf/{workloadId}/GET/ApiPermission.WatExporterStackApiGateway9D9B60BD.GET..get_wf.{workloadId}
  ApiGatewaygetwfworkloadIdGETApiPermissionTestWatExporterStackApiGateway9D9B60BDGETgetwfworkloadId0EFF9CAF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WorkflowFunction9B932173
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ApiGateway11E7F47B
            - /test-invoke-stage/GET/get_wf/*
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/get_wf/{workloadId}/GET/ApiPermission.Test.WatExporterStackApiGateway9D9B60BD.GET..get_wf.{workloadId}
  ApiGatewaygetwfworkloadIdGETBA2CE43B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: ApiGatewaygetwfworkloadIdC0784AD3
      RestApiId:
        Ref: ApiGateway11E7F47B
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WorkflowFunction9B932173
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/get_wf/{workloadId}/GET/Resource
  ApiGatewayonboard4893A73B:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ApiGateway11E7F47B
          - RootResourceId
      PathPart: onboard
      RestApiId:
        Ref: ApiGateway11E7F47B
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/onboard/Resource
  ApiGatewayonboardPOSTApiPermissionWatExporterStackApiGateway9D9B60BDPOSTonboard967E78FE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserOnboardFunctionB26A5A1A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ApiGateway11E7F47B
            - /
            - Ref: ApiGatewayDeploymentStageprod1C6D5CD6
            - /POST/onboard
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/onboard/POST/ApiPermission.WatExporterStackApiGateway9D9B60BD.POST..onboard
  ApiGatewayonboardPOSTApiPermissionTestWatExporterStackApiGateway9D9B60BDPOSTonboardFA5FD911:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UserOnboardFunctionB26A5A1A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ApiGateway11E7F47B
            - /test-invoke-stage/POST/onboard
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/onboard/POST/ApiPermission.Test.WatExporterStackApiGateway9D9B60BD.POST..onboard
  ApiGatewayonboardPOST263FC2D8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: ApiGatewayonboard4893A73B
      RestApiId:
        Ref: ApiGateway11E7F47B
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UserOnboardFunctionB26A5A1A
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: WatExporterStack/ApiGateway/Default/onboard/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WQ207DMAyGn4X7NGxDSNxuQ9whpvEAk5eY4jWHqnaYqqrvTpIOaVz5+3347WSjn1d69QBXboztGkdnPX0KmE7l1Gly4M8W9PSWghGKQe2/wj0fcPDEnNWsCLyejtFhKdR4iI7MWPsqzYqfTsCMwnpbQtZ6l0yHsgNGBT21IHiFMRshy7an6nXDV+xdHD0GKdk7lQ9u69YFcn9Mg8Hq+SduRgu/o3xHW1ILzbOq95R5Cm0pfCTpk/ybyryPwZLU54ZoUV/48Wf9oteb/IcXJmqGFIQ86uMSfwFM1b63XwEAAA==
    Metadata:
      aws:cdk:path: WatExporterStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  ApiGatewayEndpoint5AA8EC3A:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: ApiGateway11E7F47B
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: ApiGatewayDeploymentStageprod1C6D5CD6
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

